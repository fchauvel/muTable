buildscript {
    repositories {
        jcenter()
    }   
    
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

allprojects {
    
    group = 'org.mutable'
    
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'license'
    apply plugin: 'maven-publish'

    
    repositories {
        jcenter()
    }
     
    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
    
    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
    
    task myJavadocs(type: Javadoc) {
        source = sourceSets.main.allJava
    }
    
    jacocoTestReport {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
        reports {
            xml.enabled false
            csv.enabled true
        }
    }
    
    
}

project(':sample') {
    dependencies {
        compile project(':library')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task updateCoverageBadge << {
    def coverageReport = new File("library/build/reports/jacoco/test/html/index.html")
    coverageReport.eachLine {
        def matcher = (it =~ /Total<\/td><td class="bar">([0-9,]+) of ([0-9,]+)<\/td><td class="ctr2">([0-9]+)%<\/td>/ )
        println("Coverage=" + matcher[0][3])
    }
}

